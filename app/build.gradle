apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'

android {
  compileSdkVersion versions.COMPILE_SDK_VERSION
  buildToolsVersion versions.BUILD_TOOLS_VERSION

  defaultConfig {
    applicationId "io.github.fixerteam.moviecheck"
    minSdkVersion versions.MIN_SDK_VERSION
    targetSdkVersion versions.TARGET_SDK_VERSION
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    buildConfigField "String", "API_URL", "\"https://api.themoviedb.org/3/\""
    buildConfigField "String", "API_KEY", "\"$api_key\""
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }
  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
  }
}

kapt {
  generateStubs = true
}

dependencies {
  compile depends.KOTLIN_STDLIB

  compile depends.ANDROID_APPCOMPAT_V7
  compile depends.ANDROID_RECYCLER_VIEW
  compile depends.ANDROID_DESIGN

  compile depends.ANKO_SDK15
  compile depends.ANKO_SUPPORT_V4
  compile depends.ANKO_SUPPORT_V7
  compile depends.ANKO_CARDVIEW_V7
  compile depends.ANKO_RECYCLERVIEW_V7
  compile depends.ANKO_DESIGN_V7

  compile depends.RX_JAVA
  compile depends.RX_ANDROID

  compile depends.DAGGER
  kapt depends.DAGGER_COMPILER
  provided depends.JAVAX_ANNOTATION
  compile depends.JAVAX_INJECT

  compile depends.GLIDE
  compile depends.GLIDE_OK_HTTP

  compile depends.RETROFIT
  compile depends.RETROFIT_JACKSON_CONVERTER
  compile depends.RETROFIT_RX_JAVA_ADAPTER

  compile depends.OK_HTTP
  compile depends.OK_HTTP_LOGS

  testCompile depends.JUNIT
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}